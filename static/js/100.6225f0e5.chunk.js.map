{"version":3,"file":"static/js/100.6225f0e5.chunk.js","mappings":"yKA6DA,IA3DqB,SAACA,EAAGC,EAAkBC,GACzCF,EAAEG,iBACF,IAEIC,EAAOJ,EAAEK,OAAO,GAAGC,MACnBC,EAASP,EAAEK,OAAO,GAAGC,MACrBE,EAASR,EAAEK,OAAO,GAAGC,MACrBG,EAAO,gBAAYL,EAAZ,6BAAqCG,EAArC,mBACTC,GAAkB,aAGpB,mCAAC,WAAOE,EAAKC,GAAZ,uFACmBC,MAAMF,EAAK,CAC3BG,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,gBAAiB,YAEnBC,KAAMJ,IAPT,cACOK,EADP,gBAScA,EAAIC,OATlB,mFAAD,yDAWE,yFACAC,KAAKC,UAAU,CAAEC,QApBN,aAoBuBC,KAAMZ,KAEvCa,MAAK,WACJC,EAAAA,GAAAA,QACE,4DACA,CACEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAIfC,OAAM,WACLT,EAAAA,GAAAA,MACE,sEACA,CACEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAIfE,SAAQ,WACHhC,GAAkBA,IAClBC,GAAYA,S,gICwCtB,EA5FgB,SAAC,GAAuB,IAArBgC,EAAoB,EAApBA,cACjB,GAAsCC,EAAAA,EAAAA,UAAS,SAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAsB,SAACxC,GACL,gBAAlBA,EAAEK,OAAOD,KAAwBiC,EAAerC,EAAEK,OAAOC,OAClC,cAAlBN,EAAEK,OAAOD,MAAsBmC,EAAavC,EAAEK,OAAOC,QAG1DJ,EAAa,WACjBmC,EAAe,SACfE,EAAa,KAGf,OACE,qBACEE,UAAWP,EAAgB,8BAAgC,UAD7D,WAGE,eAAI,WAAS,aAAa,oBAAkB,MAAM,gBAAc,OAAhE,oBAGA,iBACEO,UAAU,OACV,WAAS,eACT,oBAAkB,MAClB,gBAAc,OAJhB,WAME,iBACEA,UAAU,YACV,WAAS,aACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OALhB,WAOE,gGACA,gIAKF,gBACEA,UAAU,WACV,WAAS,YACT,oBAAkB,MAClB,iBAAe,MACf,gBAAc,OALhB,UAOE,kBAAMC,SAAU,SAAC1C,GAAD,OAAO2C,EAAAA,EAAAA,GAAa3C,EAAG,KAAME,IAA7C,WACE,0BACE,kBAAO0C,QAAQ,aAAf,UACE,kBACEC,KAAK,OACLzC,KAAK,YACL0C,YAAY,qBACZC,UAAQ,EACRC,aAAa,MACbC,UAAW,EACX3C,MAAOgC,EACPY,SAAUV,EACVW,GAAG,oBAIT,0BACE,kBAAOP,QAAQ,eAAf,UACE,SAAC,IAAD,CACEQ,QAAS,CACPC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,WAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KACjCC,aAAa,EACbC,OAAQ,QAEVT,UAAQ,EACRzC,MAAO8B,EACPc,SAAUV,EACVpC,KAAK,cACL4C,aAAa,MACbH,KAAK,MACLM,GAAG,sBAIT,0BACE,mBAAQN,KAAK,SAAb","sources":["components/Api/sendMessage.js","components/Contact/Contact.js"],"sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nconst onSubmitForm = (e, onClickOpenModal, clearInput) => {\r\n  e.preventDefault();\r\n  let botId = \"5248005861:AAG1tkGWe5C8THhXjsy7dKuPbMO5CYBiSc8\";\r\n  let chatId = \"1285249707\";\r\n  let name = e.target[0].value;\r\n  let number = e.target[1].value;\r\n  let course = e.target[2].value;\r\n  let message = `Ismi: ${name}\\nTelefon raqami: ${number}\\nKurs: ${\r\n    course ? course : \"Qiziqish\"\r\n  }`;\r\n\r\n  (async (url, data) => {\r\n    const res = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"cache-control\": \"no-cache\",\r\n      },\r\n      body: data,\r\n    });\r\n    return await res.json();\r\n  })(\r\n    \"https://api.telegram.org/bot\" + botId + \"/sendMessage\",\r\n    JSON.stringify({ chat_id: chatId, text: message })\r\n  )\r\n    .then(() => {\r\n      toast.success(\r\n        \"Ma'lumotingiz yuborildi! Tez orada siz bilan bog'lanamiz!\",\r\n        {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n    })\r\n    .catch(() => {\r\n      toast.error(\r\n        \"Xato! Iltimos internetingizni tekshirib, boshqatdan urunib ko'ring!\",\r\n        {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n    })\r\n    .finally(() => {\r\n      if (onClickOpenModal) onClickOpenModal();\r\n      if (clearInput) clearInput();\r\n    });\r\n};\r\n\r\nexport default onSubmitForm;\r\n","import \"./Contact.css\";\r\nimport onSubmitForm from \"../Api/sendMessage\";\r\nimport Cleave from \"cleave.js/react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Contact = ({ activeContact }) => {\r\n  const [numberInput, setNumberInput] = useState(\"+998 \");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n\r\n  const onHandleChangeInput = (e) => {\r\n    if (e.target.name === \"numberInput\") setNumberInput(e.target.value);\r\n    else if (e.target.name === \"nameInput\") setNameInput(e.target.value);\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setNumberInput(\"+998 \");\r\n    setNameInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={activeContact ? \"contact contact-click-style\" : \"contact\"}\r\n    >\r\n      <h2 data-aos=\"fade-right\" data-aos-duration=\"600\" data-aos-once=\"true\">\r\n        Aloqa\r\n      </h2>\r\n      <div\r\n        className=\"form\"\r\n        data-aos=\"zoom-in-down\"\r\n        data-aos-duration=\"800\"\r\n        data-aos-once=\"true\"\r\n      >\r\n        <div\r\n          className=\"form-text\"\r\n          data-aos=\"fade-right\"\r\n          data-aos-duration=\"600\"\r\n          data-aos-delay=\"450\"\r\n          data-aos-once=\"true\"\r\n        >\r\n          <h2>Quyidagi formani to’ldiring va biz siz bilan bog’lanamiz</h2>\r\n          <p>\r\n            Bizda o’qib zamonaviy kasblarni o’rganing va ilk millionlaringizni\r\n            ishlashni boshlang.\r\n          </p>\r\n        </div>\r\n        <div\r\n          className=\"form-box\"\r\n          data-aos=\"fade-left\"\r\n          data-aos-duration=\"600\"\r\n          data-aos-delay=\"450\"\r\n          data-aos-once=\"true\"\r\n        >\r\n          <form onSubmit={(e) => onSubmitForm(e, null, clearInput)}>\r\n            <div>\r\n              <label htmlFor=\"nameInputC\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nameInput\"\r\n                  placeholder=\"Ism va familyangiz\"\r\n                  required\r\n                  autoComplete=\"off\"\r\n                  minLength={3}\r\n                  value={nameInput}\r\n                  onChange={onHandleChangeInput}\r\n                  id=\"nameInputC\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"numberInputC\">\r\n                <Cleave\r\n                  options={{\r\n                    blocks: [4, 0, 2, 0, 3, 2, 2],\r\n                    delimiters: [\" \", \"(\", \")\", \" \", \"-\"],\r\n                    numericOnly: true,\r\n                    prefix: \"+998\",\r\n                  }}\r\n                  required\r\n                  value={numberInput}\r\n                  onChange={onHandleChangeInput}\r\n                  name=\"numberInput\"\r\n                  autoComplete=\"off\"\r\n                  type=\"tel\"\r\n                  id=\"numberInputC\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\">Yuborish</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["e","onClickOpenModal","clearInput","preventDefault","name","target","value","number","course","message","url","data","fetch","method","headers","body","res","json","JSON","stringify","chat_id","text","then","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","finally","activeContact","useState","numberInput","setNumberInput","nameInput","setNameInput","onHandleChangeInput","className","onSubmit","onSubmitForm","htmlFor","type","placeholder","required","autoComplete","minLength","onChange","id","options","blocks","delimiters","numericOnly","prefix"],"sourceRoot":""}